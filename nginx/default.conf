upstream client {
    server frontend:3000;
}
upstream server {
    server backend:8000;
}
upstream pgadmin {
    server pgadmin:80;
}
upstream database {
    server postgres:5432;
}
upstream nifi {
    server nifi:8443;
}
server {
    listen 80;
    server_name northgatevologda.ru;
    location / {
        return 301 https://northgatevologda.ru$request_uri;
    }
}
server {
    listen 443 ssl; # listen 443 port
    server_name northgatevologda.ru;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    ssl_certificate /etc/letsencrypt/live/northgatevologda.ru/fullchain.pem; # <-this
    ssl_certificate_key /etc/letsencrypt/live/northgatevologda.ru/privkey.pem; # <-this
    location / {
        proxy_pass http://client;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }
    location /sockjs-node {
        proxy_pass http://client;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }
}
server {
    listen 80;
    server_name api.northgatevologda.ru;
    location / {
        return 301 https://api.northgatevologda.ru$request_uri;
    }
    location /.well-known/acme-challenge/ { # <-- this section
        # let's encrypt asks for this location and needs to get the response from /var/www/certbot
        # generated by certbot and available to nginx via volumes
        root /var/www/certbot;
    }
}
server {
    listen 443 ssl;
    server_name api.northgatevologda.ru;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    ssl_certificate /etc/letsencrypt/live/api.northgatevologda.ru/fullchain.pem; # <-this
    ssl_certificate_key /etc/letsencrypt/live/api.northgatevologda.ru/privkey.pem; # <-this
    location / {
        proxy_pass http://server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
    }
}
server {
    listen 5432 ssl;
    server_name db.northgatevologda.ru;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    ssl_certificate /etc/letsencrypt/live/db.northgatevologda.ru/fullchain.pem; # <-this
    ssl_certificate_key /etc/letsencrypt/live/db.northgatevologda.ru/privkey.pem; # <-this
    location / {
        proxy_pass http://database;
    }
}
server {
    listen 80;
    server_name pgadmin.northgatevologda.ru;
    location / {
        return 301 https://pgadmin.northgatevologda.ru$request_uri;
    }
    location /.well-known/acme-challenge/ { # <-- this section
        # let's encrypt asks for this location and needs to get the response from /var/www/certbot
        # generated by certbot and available to nginx via volumes
        root /var/www/certbot;
    }
}
server {
    listen 443 ssl;
    server_name pgadmin.northgatevologda.ru;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    ssl_certificate /etc/letsencrypt/live/pgadmin.northgatevologda.ru/fullchain.pem; # <-this
    ssl_certificate_key /etc/letsencrypt/live/pgadmin.northgatevologda.ru/privkey.pem; # <-this
    location / {
        proxy_pass http://pgadmin;
    }
}
server {
    listen 443 ssl;
    server_name nifi.northgatevologda.ru;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    ssl_certificate /etc/letsencrypt/live/nifi.northgatevologda.ru-0002/fullchain.pem; # <-this
    ssl_certificate_key /etc/letsencrypt/live/nifi.northgatevologda.ru-0002/privkey.pem; # <-this
    ssl_trusted_certificate /etc/letsencrypt/live/nifi.northgatevologda.ru-0002/cert.pem;
    location / {
        proxy_pass https://nifi;
        proxy_set_header   Host                 $host;
        proxy_set_header   X-Real-IP            $remote_addr;
        proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto    $scheme;
        proxy_set_header   X-Forwarded-User     $remote_user;
        proxy_set_header   Authorization        "";
        proxy_set_header   X-ProxyScheme        $scheme;
        proxy_set_header   X-ProxyHost          $hostname;
        proxy_set_header   X-ProxyPort          $server_port;
        proxy_set_header   X-ProxyContextPath   /;
    }
}
